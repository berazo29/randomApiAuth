# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: dev-test CI

on:
  push:
    branches: [ development ]
env:
  DB_HOST: localhost
  DB_USER: root
  DB_PASSWORD: simplepassword
  DB_NAME: test_db
  DB_PORT: 3306
  SESSION_SECRET: this-is-a-testing-secret
  SESSION_MAX_AGE: 360000
  SERVER_PORT: 3000
  BCRYPT_SALT: 10
  NODE_ENV: development

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql-service:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
        options: >-
          --name=mysql-service
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    strategy:
      matrix:
        node-version: [17.x]
        redis-version: [6]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Start Redis
      uses: supercharge/redis-github-action@1.4.0
      with:
        redis-version: ${{ matrix.redis-version }}

    - name: Build and install dependencies
      run: |
        npm install -g yarn
        rm -rf node_modules
        yarn install --frozen-lockfile
    
    - name: Initialize test database
      run: yarn init-test-db
           
    - name: Test & Coverage
      run: yarn test

    - name: Clean yarn
      run: npm uninstall -g yarn
